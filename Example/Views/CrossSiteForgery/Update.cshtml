@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
  .success {
  }
  .error {
    background-color:indianred;
  }
</style>
<div class="container body-content">
  <h1>
    Anti request forgery token
  </h1>
  <p>
  </p>
  <div class="row">
    <div class="col-md-4">
      <h2>
        Update
      </h2>
      @Html.ValidationSummary("Edit was unsuccessful. Please correct the errors and try again.")
      <h3>
        With token
      </h3>
      @using (Html.BeginForm())
      {
          <p>
            @Html.AntiForgeryToken()
            @Html.TextBox("text")
          </p>
          <p>
            <input type="submit" value="Submit text" />
          </p>
      }
    </div>
    <div class="col-md-4">

      <h3>
        Without token
      </h3>
      @using (Html.BeginForm())
      {
          <p>
            @Html.TextBox("text")
          </p>
          <p>
            <input type="submit" value="Submit text without token" />
          </p>
      }
    </div>
    <div class="col-md-4">
      <h3>
        Result
      </h3>

      @Html.Encode(ViewData["message"] ?? string.Empty)
    </div>

  </div>
  <hr />
  <div class="row">
    <div class="col-md-4">
      <h3>
        Ajax
      </h3>
      <div id="ajaxtoken" style="display: none;">
        @Html.AntiForgeryToken()
      </div>
      <div id="ajaxform">
        <p>
          @Html.TextBox("ajaxtext", "", new { id = "ajaxtext" })
        </p>
        <p>
          <input id="ajaxwithtoken" type="button" value="Submit text with token ajax" />
        </p>
        <p>
          <input id="ajaxwithouttoken" type="button" value="Submit text without token ajax" />
        </p>
      </div>
    </div>
    <div class="col-md-4">
      <h3>
        Result
      </h3>
      <pre id="ajaxresult"></pre>
    </div>
  </div>
</div>
@section scripts{
  <script type="text/javascript">
    $(function () {
      function success(data, textStatus, jqXHR) {
        var r = $("#ajaxresult");
        r.text(data);
        r.toggleClass("success", true);
        r.toggleClass("error", false);
      }
      function error(jqXHR, textStatus, errorThrown) {
        var r = $("#ajaxresult");
        r.text([textStatus, errorThrown].join("\n"));
        r.toggleClass("error", true);
        r.toggleClass("success", false);
      }

      $("#ajaxwithtoken").click(function () {
        var data = $('#ajaxform').serializeArray();
        var token = $('#ajaxtoken input[name=__RequestVerificationToken]').val();
        data.push({ name: '__RequestVerificationToken', value: token });
        $.ajax({
          method:'POST',
          url: '/CrossSiteForgery/UpdateWithAntiForgeryTokenAjax',
          data: data,
          error: error,
          success: success
        });
      });

      $("#ajaxwithouttoken").click(function () {
        var data = $('#ajaxform').serializeArray();
        $.ajax({
          method: 'POST',
          url: '/CrossSiteForgery/UpdateWithAntiForgeryTokenAjax',
          data: data,
          error: error,
          success: success
        });
      });
    });
  </script>
}
